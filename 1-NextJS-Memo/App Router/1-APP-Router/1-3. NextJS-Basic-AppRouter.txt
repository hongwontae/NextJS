1. 동적 라우트
1-1. 폴더를 생성할 떄 대괄호를 안에 커스텀 변수를 넣으면 동적 라우트가 활성화된다.

1-2. 구조
blog folder
            page.js
            [id] folder
                        page.js
=> URL을 통해서 접근하거나 Link을 통해서 /blog/post-1처럼 접근할 수 있다.
=> /post-1은 동적 라우트이다.

1-3. 구조 분해를 통해서 동적 라우트의 값을 알 수 있다. => {params.대괄호 값}


2. 레이아웃 +
2-1. 상위에 존재하는 레이아웃은 자기 자신의 page와 하위의 page을 대상으로 레이아웃한다.
2-2. layout은 children props을 통해서 page나 하위의 layout을 표시한다.

 
3. etc..
3-1. img를 가져올 떄 React 처럼 가져오지만 중괄호 내부에 넣을 떄 .src와 함께 사용한다.
3-2. Link를 사용할 떄 href을 주지 않으면 에러가 발생한다.
3-3. dangerouslySetInnerHTML => HTML 문자열을 DOM에 직접 삽입할 떄 사용된다.
(속성으로 객체를 주어야 하며 __html의 값으로 넣을 HTML 문자열을 값으로 주면 된다.)
(XXS 공격에 취약하기 때문에 xxs 라이브러리를 통해 HTML을 정제하는 과정이 필요하다.)


4. NextJS Styling
4-1. CSS module : 특정 컴포넌트 안에 CSS 파일이 스코프된다.


5. <Image>
5-1. 이미지 최적화를 위해 사용하는 컴포넌트이다.
5-2. 기존의 img 태그는 사진을 객체로 가져와서 .src에 접근해야 했지만 Image 컴포넌트의 src는 객체만 주어도 된다.
5-3. 자동 크기 조정 및 포맷 변환
(width나 height을 명시적으로 사용해도 디바이스 크기에 맞춰 이미지를 자동으로 최적화한다.)
5-4. Lazy Loading => 기본적으로 지원한다. 이를 원치 않는다면 priority 속성을 주면 된다.


