1. <Image> +
1-1. fill props : 


2. SQLite
2-1. 서버리스, 자가 포함형 DB(별도의 서버, 관리 소프트웨어 없이 사용할 수 있는 DB엔진), 파일 기반 DB이다.
2-2. DB는 단일 파일에 저장되고, 파일을 애플리케이션에서 직접 열고 사용할 수 있다.
2-3. SQLite은 라이브러리 형태로 제공, 드라이버 필요x
2-4. 경량 => 빠르다.
2-5. ACID 트랜잭션 지원
2-6. 표준 SQL 지원

2-7. npm install sqlite3/ npm install better-sqlite3

2-8. meal에 해당되는 DB, TABLE을 초기화하고 node 파일명.js

2-9. DB 이름으로 .db 파일이 생성된다.


3. 서버 컴포넌트가 비동기적으로 데이터를 가져온다는 게 무슨 의미일까?
3-1. 서버 컴포넌트는 async 키워드를 컴포넌트 자체가 사용할 수 있다.
3-2. 그렇게 되면 비동기 함수의 실행 결과를 await하여 가져오고 HTML을 구성한다. (서버 사이드 렌더링)
3-3. 이후 해당 HTML을 건네준다.


4. NextJS - SQLite
1. sqlite을 사용해서 원하는 데이터를 가져오는 함수를 만든다.
2. db.prepare('sql') => 원하는 데이터를 가져오는 SQL을 문자열 인자로 넣는다.
3. prepare().all() => SQL 문을 통해 가져온 모든 데이터를 반환한다.
4. 비동기 함수가 아니다. Promise을 반환하지 않는다.


5. Loading Page
5-1. loading이라고 이름이 붙인 컴포넌트는 해당 페이지 HTML이 도착하기 전에 보여주는 HTML이다.
5-2. 주로 서버 컴포넌트 비동기 작업으로 데이터를 가져오고 HTML을 구성하는 시간이 다소 걸릴 떄 유용하다.


6. <Suspense>
6-1. 비동기적으로 로딩되는 컴포넌트를 감싸고 해당 컴포넌트가 렌더링되기 전까지 fallback을 보여주는 컴포넌트
6-2. <Suspense>에 감싸지는 컴포넌트는 내부에 비동기로직이 존재하는 완성된 컴포넌트여야 한다.





