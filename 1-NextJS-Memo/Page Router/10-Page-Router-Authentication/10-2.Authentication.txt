1. useSession
1-1. const {data, status} = useSession();
1-2. data => user 정보, status는 상태 정보(loading, 인증, 비인증)
1-3. 클라이언트 사이드에서만 사용 가능 (브라우저의 세션 쿠키를 자동으로 가져온다.)


2. getSession
2-1. const session = await getSession(context or not);
2-2. 비동기 함수이고 서버사이드에서도 사용할 수 있다. 서버 사이드에서 사용할 떄는 자동으로 세션 쿠키를 가져오지 않기 때문에
context 객체를 넣어줘야 한다.
2-3. 세션 정보를 반환한다.


3. getSession + getServerSideProps
=> 요청이 전달될 떄마다 서버 사이드 렌더링을 통해 session을 확인하고 라우트를 반환하거나 보호한다.
=> 서버에서 내부적으로 처리되기 떄문에 더 빠르고 loading 상태를 띄우지 않아도 된다.


4. useSession과 getSession 인증 확인 절차
4-1. useS, getS이 호출되면 브라우저에 저장된 JWT가 서버로 전송된다.
4-2. 서버에서 JWT 유효성을 검사한다.
4-3. JWT가 유효하다면 사용자 세션 정보 + 메타 데이터 정보 생성하여 클라이언트에게 전달
4-4. 이를 CS에서 사용한다.


5. import { SessionProvider } from 'next-auth/react';
5-1. 애플리케이션 전체 세션 관리 
5-2. 상태 공유, 상태 유지 : CS에서 세션 상태를 지속적으로 유지/ 새로고침 OR 다른 페이지 이동 떄도 세션 상태 손실되지 않는다.
5-3. 비동기 로딩 처리




